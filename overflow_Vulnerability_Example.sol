// To make vulnerability work we just need to specify 2 addresses and input 
// 0x8000000000000000000000000000000000000000000000000000000000000000
// to make the batchSend function overflow and set total to 0 while also sending an enormous amout to both addresses

    //This is the old version that these contracts ran on at the time of the vulnerability
pragma solidity ^0.4.10;

    //Example of what happened with Beauty Chain Overflow vulnerability 
contract Overflow_Example {
    
        //a mapping data structure from adress to integer to hold all the balances
    mapping (address=>uint) balances;
    
        //a function that gives out tokens based on amount of real ETH deposited
    function contribute() public payable {
            //Takes the amount of ETH and saves the specified amount of tokens to the users balance to represent their deposited ETH
            //This line saves eth to token conversion of 1 wei = 1 token
                //but could easilly be changed to "balances[msg.sender] = 100 * msg.value;" to make the conversion 1 wei = 100 tokens
        balances[msg.sender] = msg.value;
    }
        //constant makes it so that you do not have to spend gas to run the function
    function getBalance() public constant returns(uint) {
        return balances[msg.sender];
    }
    
}
